[auth]
	# This is for the links a the bottom of login/join auth pages.
	or = "of"
	join_link = "Registreren!"
	login_link = "Log In"
	forgot_link = "Inloggegevens opvragen"

# /login
[auth.login]
	page_title = "Log in op Game Jolt"

	twitter_button = "Log In Met Twitter"
	facebook_button = "Log In Met Facebook"

	username_label = "Gebruikersnaam"
	password_label = "Wachtwoord"
	submit_button = "Log In"

	# Shows up if you enter an invalid user/password combination.
	invalid_login_error_html = "Gebruikersnaam of wachtwoord onbekend."

	# Login takes a while, so we show this for the loading text.
	# Can be quirky and fun! =]
	loading_message_count = "4"
	loading_message_1 = "Verbinden met mainframe..."
	loading_message_2 = "Berekenen exacte waarde van Ï€..."
	loading_message_3 = "Uitrollen van amusumentsmodules..."
	loading_message_4 = "Projecteren hoopla matrix..."

# /join
[auth.join]
	page_title = "Neem deel aan Gamejolt - De grootste collectie Indie Games ter wereld"

	twitter_button = "Registreer met Twitter"
	facebook_button = "Registreer met Facebook"

	# The lead text of the page.
	# Quirky and fun as it's the text to get them excited about signing up.
	# Let's try to keep it at 3 lines or less on the page.
	join_message_html_count = "2"
	join_message_html_1 = "Schrijf je in. Mwuahaha.<br>We hebben games.<br><strong><em>Mwuahahaha!</em></strong>"
	join_message_html_2 = "Schrijf je in voor een raketrit naar het hart van de supernova van Games."

	email_label = "Email Addres"
	username_label = "Gebruikersnaam"
	password_label = "Wachtwoord"

	submit_button = "Registreren"

# /join/almost
# After a successful sign up they land here.
# They still have to authorize their account.
[auth.join.almost]
	page_title = "Bijna klaar!"
	heading = "@:auth.join.almost.page_title"
	body_html = """
	<p>Voordat je kunt inloggen moet je e-mail adres geverifieerd worden.</p>
	<p>We hebben je een email gestuurd om de authorisatie te voltooien.</p>
	"""
	spam = "Heb je de mail niet binnen 10 minuten ontvangen, check dan je SPAM map, deze heeft de mail waarschijnlijk opgegeten."
	urgency = "De verificatie mail is een week geldig, activeer binnen een week of de account wordt verwijderd."

# You need to actually sign up to get a valid URL for this page.
# We only show a Growl on successful authorization and funnel off to the main site.
[auth.authorize]
	success_growl_title = "Account Geautoriseerd"
	success_growl = "We verwijzen je door naar je Gamejolt Dashboard."

# /authorize/169219/62b17036174c87ee503fe0ef2902c79d/2
# The page that shows when their authorization fails.
# They shouldn't get here unless they clicked the link again after authorizing. Or if they are trying to cheat something.
[auth.authorize.invalid]
	page_title = "Authorisatiecode ongeldig"
	heading = "Authorisatie error"
	body_html = """
	<p>De authorisatie code is niet juist.</p>
	<p>Controleer of je de juiste URL gebruikt hebt.</p>
	"""

# /forgot
[auth.forgot]
	page_title = "Log In gegevens ophalen"
	heading = "@:auth.forgot.page_title"

	email_help = "Voor het mailadres in waarmee je geregistreerd hebt, dan sturen we de inloggegevens daar naar toe."
	email_label = "Email Addres"
	submit_button = "Gegevens Verzenden"

	# If the email address they enter isn't a registered user, this shows up as an error message.
	invalid_email_error_html = """
	<p>Hmmm, dat mailadres is ons niet bekend, ben je al <a href="/join">geregistreerd</a>?</p>
	"""

# /forgot/sent
# For after they fill out the "forgot" form.
[auth.forgot.sent]
	page_title = "Log In gegevens verzonden"
	heading = "@:auth.forgot.sent.page_title"
	body_html = "<p>Je inloggegevens zijn verzonden naar het opgegeven mailadres.</p>"
	spam = "Heb je de mail niet binnen 10 minuten ontvangen, check dan je SPAM map, deze heeft de mail waarschijnlijk opgegeten!"

# The URL for this gets sent in an email when they fill out the forgot login credentials page.
[auth.reset_password]
	page_title = "Wachtwoord resetten"
	heading = "@:auth.reset_password.page_title"

	password_help = "Als je jouw wachtwoord wilt veranderen, voer hier onder dan een nieuw wachtwoord in."
	password_label = "Nieuwe Wachtwoord"
	submit_button = "Wachtwoord Resetten"

	# For when they successfully reset.
	# Will send them back to the login page after showing this Growl.
	success_growl_title = "Wachtwoord Gewijzigd"
	success_growl = "Je wachtwoord is gewijzigd, je kunt nu inloggen met het nieuwe wachtwoord."


#####################
# Linked Account Auth

[auth.linked_account]

	# When they get returned back to GJ from FB/Twitter, etc. we do some processing of the login/sign up.
	# This is a generic loading message while we're doing our work.
	loading_message = "Verwerken, een momentje geduld..."

[auth.linked_account.facebook]

	# Generic failed message.
	failed_growl = "Kan niet inloggen met Facebook."
	failed_growl_title = "Inloggen mislukt"

	# For the rare case when FB doesn't give us an email address. This would be very rare if it did ever happen.
	no_email_growl = "Je Facebook account stuurt ons geen mailadres door. Controleer of je mailadres bij Facebook bekend is."
	no_email_growl_title = "Oh nee!"

	# When someone tries to sign up with an FB account with an email address that exists on an existing GJ account.
	# In most cases this will probably be an accident where they signed up in the past
	# and then try signing up again with FB later on, but their email address is
	# registered on their old account.
	duplicate_email_growl = "Het email adres van de opgegeven Facebook account is al bij ons bekend, ben je al geregistreerd?"
	duplicate_email_growl_title = "Oh nee!"

	# After a successful FB sign up.
	created_growl = "Je account is aangemaakt, vanaf hier staat de wind in je zeilen!"
	created_growl_title = "Account Aangemaakt"

[auth.linked_account.twitter]

	# Generic failed message.
	failed_growl = "Kan niet inloggen met Twitter."
	failed_growl_title = "Inloggen mislukt"

	# When they submit the form and their account is set up with Twitter.
	created_growl = "Je account is aangemaakt, vanaf hier staat de wind in je zeilen!"
	created_growl_title = "Account Aangemaakt"

# /login/finalize-twitter
# They get directed here when they sign up with a new twitter account and we require their email address.
[auth.linked_account.twitter.finalize]
	page_title = "Email Vereist"
	heading = "@:auth.linked_account.twitter.finalize.page_title"

	email_help = "Om het inloggen met Twitter af te ronden hebben we je email adres nodig."
	email_label = "Email Addres"
	submit_button = "Registratie Afronden"

	# If they entered an email address that exists on another account.
	# In most cases this will probably be an accident where they signed up in the past
	# and then try signing up again with twitter later on, but their email address is
	# registered on their old account.
	duplicate_email_error_html = """
	<p>Het opgegeven email adres is reeds bij ons bekend.</p>
	<p>Als je al een Gamejolt account hebt, kun je hier <a href="/login">inloggen</a>.</p>
	<p>Als je de inloggegevens vergeten bent kun je ze <a href="/forgot">hier opvragen</a>.</p>
	"""
